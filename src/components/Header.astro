---
import { headerMenu } from '@data/menu';
import Logo from '@components/Logo.astro';
import { Menu, X } from 'lucide-astro';
import Button from '@components/ui/Button.astro';

const ctaButton = {
    name: 'ContÃ¡ctanos',
    link: '/contact',
};

// Get the current path to determine active menu item
const currentPath = Astro.url.pathname;

// Function to check if a link is the current page or a parent of the current page
const isCurrentPage = (link: string) => {
    if (link === '/') {
        return currentPath === '/';
    }
    return currentPath.startsWith(link);
};
---

<header class="fixed top-0 z-50 w-full left-0">
    <div class="site-container mx-auto px-4 mt-4">
        <div class="flex justify-between items-center bg-primary/35 backdrop-blur-md py-4 rounded-lg px-4 shadow-lg">
            <Logo />
            <nav class="relative flex items-center gap-2 lg:gap-8" aria-label="Site Navigation">
                {/* Desktop Menu */}
                <ul class="hidden lg:flex lg:gap-8 items-center">
                    {
                        headerMenu.map((item) => (
                            <li>
                                <a
                                    href={item.link}
                                    class:list={[
                                        'text-small font-medium rounded-md px-2 py-1 focus:outline-none focus:ring-2 focus:ring-white',
                                        isCurrentPage(item.link)
                                            ? 'text-white font-semibold'
                                            : 'text-gray-200 hover:text-white',
                                    ]}
                                    aria-current={isCurrentPage(item.link) ? 'page' : undefined}
                                >
                                    {item.name}
                                </a>
                            </li>
                        ))
                    }
                </ul>

                <Button href={ctaButton.link} variant="primary">{ctaButton.name}</Button>

                {/* Mobile Menu Button */}
                <button
                    class="mobile-menu-button relative z-30 p-2 border-none cursor-pointer bg-transparent lg:hidden"
                    aria-label="Toggle Menu"
                    aria-expanded="false"
                >
                    <span class="menu-icon block">
                        <Menu size={24} class="text-white" />
                    </span>
                    <span class="close-icon hidden">
                        <X size={24} class="text-white" />
                    </span>
                </button>

                {/* Mobile Menu Panel */}
                <div
                    class="mobile-menu fixed  z-20 px-8 pt-20 bg-primary/40 lg:hidden hidden opacity-0 scale-95 transform transition-all duration-200 ease-out overflow-y-auto"
                >
                    <ul class="flex flex-col gap-4">
                        {
                            headerMenu.map((item) => (
                                <li>
                                    <a
                                        href={item.link}
                                        class:list={[
                                            'py-1 rounded-md focus:outline-none focus:ring-2 focus:ring-white',
                                            isCurrentPage(item.link)
                                                ? 'text-white font-semibold'
                                                : 'text-gray-200 hover:text-white',
                                        ]}
                                        aria-current={isCurrentPage(item.link) ? 'page' : undefined}
                                    >
                                        {item.name}
                                    </a>
                                </li>
                            ))
                        }
                    </ul>

                    {/* Mobile CTA button */}
                    <div class="mt-8 pb-8">
                        <Button href={ctaButton.link} variant="ghostLight">{ctaButton.name}</Button>
                    </div>
                </div>
            </nav>
        </div>
    </div>
</header>

<script>
    // Mobile menu toggle with scroll lock
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const menuIcon = document.querySelector('.menu-icon');
    const closeIcon = document.querySelector('.close-icon');

    mobileMenuButton?.addEventListener('click', () => {
        const isHidden = mobileMenu?.classList.contains('hidden');
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';

        if (isHidden) {
            document.body.style.overflow = 'hidden';
            mobileMenu?.classList.remove('hidden');
            requestAnimationFrame(() => {
                mobileMenu?.classList.remove('opacity-0', 'scale-95');
                mobileMenu?.classList.add('opacity-100', 'scale-100');
            });
            menuIcon?.classList.add('hidden');
            closeIcon?.classList.remove('hidden');
            mobileMenuButton.setAttribute('aria-expanded', 'true');
        } else {
            document.body.style.overflow = '';
            mobileMenu?.classList.add('opacity-10', 'scale-95');
            mobileMenu?.classList.remove('opacity-100', 'scale-100');
            setTimeout(() => {
                mobileMenu?.classList.add('hidden');
            }, 200);
            menuIcon?.classList.remove('hidden');
            closeIcon?.classList.add('hidden');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
        }
    });
</script>
