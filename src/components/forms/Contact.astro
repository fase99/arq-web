---
import Button from "@components/ui/Button.astro";
import Input from "@components/ui/form/Input.astro";
import Textarea from "@components/ui/form/Textarea.astro";
import Radio from "@components/ui/form/Radio.astro";
import Checkbox from "@components/ui/form/Checkbox.astro";
import Select from "@components/ui/form/Select.astro";

const hearAboutOptions = [
{ label: "Buscador (Google, Bing, etc.)", value: "buscador" },
{ label: "Redes Sociales (Instagram, Facebook, etc.)", value: "redes_sociales" },
{ label: "Recomendación de amigo o colega", value: "recomendacion" },
{ label: "Publicidad online", value: "publicidad_online" },
{ label: "Cliente anterior o recurrente", value: "cliente_anterior" },
{ label: "Otro", value: "otros" }
];

const serviceOptions = [
    { label: "Servicio Básico", value: "servicio_basico" },
    { label: "Servicio Intermedio", value: "servicio_intermedio" },
    { label: "Servicio Avanzado", value: "servicio_avanzado" },
    { label: "Servicio Avanzado+", value: "servicio_avanzado_plus" }
];

const formBackground = 'light';

// Configuración de EmailJS obtenida del archivo .env
const emailjsConfig = {
    publicKey: import.meta.env.EMAILJS_PUBLIC_KEY,
    serviceId: import.meta.env.EMAILJS_SERVICE_ID,
    templateId: import.meta.env.EMAILJS_TEMPLATE_ID,
    contactEmail: import.meta.env.CONTACT_EMAIL
};
---

<form id="contact-form" class="space-y-6 bg-white p-8 rounded-xl shadow-lg" autocomplete="off">
    <!-- Mensajes de estado -->
    <div id="success-message" class="hidden bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-lg relative" role="alert">
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            <span class="font-medium" id="success-text"></span>
        </div>
    </div>
    
    <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-lg relative" role="alert">
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
            </svg>
            <span class="font-medium" id="error-text"></span>
        </div>
    </div>

    <!-- Información personal -->
    <div class="space-y-4">
        <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Información Personal
        </h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <Input
                label="Nombre Completo"
                id="name"
                name="name"
                required
                background={formBackground}
            />
            <Input
                label="Email Corporativo"
                type="email"
                id="email"
                name="email"
                required
                background={formBackground}
            />
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <Input
                label="Número de Teléfono"
                type="tel"
                id="phone"
                name="phone"
                background={formBackground}
            />
            <Input
                label="Nombre de la Empresa"
                id="company"
                name="company"
                background={formBackground}
            />
        </div>
    </div>

    <!-- Información del proyecto -->
    <div class="space-y-4">
        <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Detalles del Proyecto
        </h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
                <Radio
                    label="¿Cómo nos conociste?"
                    id="hear-about"
                    name="hear-about"
                    options={hearAboutOptions}
                    required
                    background={formBackground}
                />
            </div>
            
            <div>
                <Select
                    label="¿Qué servicio te interesa?"
                    id="service"
                    name="service"
                    options={serviceOptions}
                    required
                    background={formBackground}
                />
            </div>
        </div>
    </div>
    
    <!-- Mensaje -->
    <div class="space-y-4">
        <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Tu Mensaje
        </h3>
        
        <Textarea
            label="Cuéntanos sobre tu proyecto"
            id="message"
            name="message"
            required
            background={formBackground}
            rows={6}
        />
    </div>
    
    <!-- Términos y condiciones -->
    <div class="border-t border-gray-200 pt-4">
        <Checkbox
            label="Acepto los términos y condiciones."
            id="terms"
            name="terms"
            required
            background={formBackground}
        />
        <p class="text-sm text-gray-600 mt-2">
            Al enviar este formulario, aceptas que procesemos tu información para responderte. 
            <a href="/legal/privacy-policy" class="text-blue-600 hover:text-blue-800 underline">
                Ver política de privacidad
            </a>
        </p>
    </div>

    <!-- Botón de envío -->
    <div class="flex justify-end pt-4">
        <Button 
            type="submit" 
            size="lg"
            class="w-full md:w-auto min-w-[200px]"
            id="submit-button"
        >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
            </svg>
            Enviar
        </Button>
    </div>
</form>

<!-- Script para EmailJS -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js"></script>
<script define:vars={{ emailjsConfig }}>
(function() {
    'use strict';
    
    function initEmailJS() {
        console.log('Inicializando EmailJS con configuración desde .env:', emailjsConfig);
        
        // Verificar que las variables de entorno estén configuradas
        if (!emailjsConfig.publicKey || !emailjsConfig.serviceId || !emailjsConfig.templateId || !emailjsConfig.contactEmail) {
            console.error('FALTAN VARIABLES DE ENTORNO DE EMAILJS EN EL ARCHIVO .ENV');
            document.getElementById('error-text').textContent = 'Error de configuración: Variables de entorno de EmailJS no configuradas correctamente.';
            document.getElementById('error-message').classList.remove('hidden');
            return;
        }
        
        if (!window.emailjs) {
            console.error('EmailJS no está disponible');
            return;
        }
        
        emailjs.init(emailjsConfig.publicKey);
        
        var form = document.getElementById('contact-form');
        var submitButton = document.getElementById('submit-button');
        var successMessage = document.getElementById('success-message');
        var errorMessage = document.getElementById('error-message');
        var successText = document.getElementById('success-text');
        var errorText = document.getElementById('error-text');
        
        if (!form || !submitButton) {
            console.error('No se encontraron elementos del formulario');
            return;
        }
        
        function showMessage(isSuccess, message) {
            successMessage.classList.add('hidden');
            errorMessage.classList.add('hidden');
            
            if (isSuccess) {
                successText.textContent = message;
                successMessage.classList.remove('hidden');
            } else {
                errorText.textContent = message;
                errorMessage.classList.remove('hidden');
            }
            
            var targetElement = isSuccess ? successMessage : errorMessage;
            targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'center'
            });
        }
        
        function setLoadingState(isLoading) {
            submitButton.disabled = isLoading;
            
            if (isLoading) {
                submitButton.innerHTML = '<svg class="animate-spin w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Enviando...';
            } else {
                submitButton.innerHTML = '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path></svg>Enviar';
            }
        }
        
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            console.log('Formulario enviado');
            
            var formData = new FormData(form);
            var name = formData.get('name');
            var email = formData.get('email');
            var message = formData.get('message');
            var service = formData.get('service');
            var terms = formData.get('terms');
            
            console.log('Datos del formulario:', {
                name: name,
                email: email,
                message: message,
                service: service,
                terms: terms
            });
            
            if (!name || !email || !message || !service || !terms) {
                showMessage(false, 'Por favor completa todos los campos requeridos.');
                return;
            }
            
            var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                showMessage(false, 'Por favor ingresa un email válido.');
                return;
            }
            
            setLoadingState(true);
            
            var templateParams = {
                from_name: name,
                from_email: email,
                phone: formData.get('phone') || 'No proporcionado',
                company: formData.get('company') || 'No proporcionado',
                hear_about: formData.get('hear-about') || 'No especificado',
                service: service,
                message: message,
                to_email: emailjsConfig.contactEmail,
                reply_to: email,
                terms_accepted: terms ? 'Sí' : 'No'
            };
            
            console.log('Enviando con EmailJS (desde .env):', {
                serviceId: emailjsConfig.serviceId,
                templateId: emailjsConfig.templateId,
                templateParams: templateParams
            });
            
            emailjs.send(
                emailjsConfig.serviceId,
                emailjsConfig.templateId,
                templateParams
            )
            .then(function(response) {
                console.log('EmailJS response:', response);
                if (response.status === 200) {
                    showMessage(true, '¡Gracias por tu mensaje! Te contactaremos pronto.');
                    form.reset();
                } else {
                    throw new Error('Error en el envío: ' + response.status);
                }
            })
            .catch(function(error) {
                console.error('Error al enviar email:', error);
                var errorMsg = 'Ha ocurrido un error al enviar tu mensaje. Por favor intenta nuevamente.';
                if (error.text) {
                    errorMsg += ' Error: ' + error.text;
                }
                showMessage(false, errorMsg);
            })
            .finally(function() {
                setLoadingState(false);
            });
        });
    }
    
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initEmailJS);
    } else {
        initEmailJS();
    }
})();
</script>
